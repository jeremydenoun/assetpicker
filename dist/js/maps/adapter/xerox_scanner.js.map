{"version":3,"sources":["adapter/node_modules/browser-pack/_prelude.js","adapter/src/js/adapter/xerox_scanner/index.js","adapter/xerox_scanner.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerAdapterXerox_scanner","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","translations","description","en","de","fr","http","options","base","config","url","replace","data","lastId","items","events","load-items","tree","loadAssets","load-more-items","forEach","item","push","methods","extension","thumbnail","createItem","id","type","name","result","page","pages","get","directory","then","response","JSON","parse","parseInt","downloadUrl","results","asset","isfolder","links","download","open","bind"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,gCAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAAC,EAAAD,SACA0B,cACAC,aACAC,GAAA,gBACAC,GAAA,gBACAC,GAAA,kBAGAC,KAAA,WACA,GAAAC,IACAC,KAAAzB,KAAA0B,OAAAC,IAAAC,QAAA,OAAA,IAEA,OAAAJ,IAEAK,KAAA,WACA,OACAC,OAAA,EACAC,MAAA,OAGAC,QACAC,aAAA,SAAAC,GACAA,EAAAH,MAAA/B,KAAAmC,cAEAC,kBAAA,SAAAL,GACA/B,KAAAmC,aAAAE,QAAA,SAAAC,GACAP,EAAAQ,KAAAD,OAIAE,SACAF,KAAA,SAAAG,EAAAC,GACA,MAAA1C,MAAA2C,YACAC,GAAA,GAAA5C,KAAA8B,SACAe,KAAAJ,EAAA,OAAA,MACAA,UAAAA,EACAK,KAAA,WAAAL,GAAA,eAAAC,EAAA,cAAA,IAAA,IAAA1C,KAAA8B,OACAY,UAAAA,KAGAP,WAAA,WACA,GAAAY,IAAAC,KAAA,EAAAC,MAAA,EAAAlB,SA0BA,OAzBA/B,MAAAuB,KAAA2B,IACA,2BAAAlD,KAAA0B,OAAAyB,WACAC,KAAA,SAAAC,GACA,GAAAxB,GAAAyB,KAAAC,MAAAF,EAAAxB,KACAwB,GAAAxB,KAAAA,EACAkB,EAAAC,KAAAQ,SAAAH,EAAAxB,KAAAmB,MACAD,EAAAE,MAAAO,SAAAH,EAAAxB,KAAAoB,MACA,IAAAQ,GAAAzD,KAAA0B,OAAAC,IAAAC,QAAA,OAAA,IAAA,6CAAA5B,KAAA0B,OAAAyB,UAAA,QACAE,GAAAxB,MAAAwB,EAAAxB,KAAA6B,SACAL,EAAAxB,KAAA6B,QAAArB,QAAA,SAAAsB,GACA,GAAArB,GAAAtC,KAAA2C,YACAC,GAAAe,EAAAf,GACAC,KAAAc,EAAAC,SAAA,MAAA,OACAd,KAAAa,EAAAb,KACAL,UAAAkB,EAAAlB,UACAoB,OACAC,SAAAL,EAAAE,EAAAf,GACAmB,KAAAN,EAAAE,EAAAf,IAEAf,KAAA8B,GAEAZ,GAAAhB,MAAAQ,KAAAD,IACA0B,KAAAhE,QAEAgE,KAAAhE,OACA+C,EAAAhB,mBCMW,IAAI","file":"../../adapter/xerox_scanner.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n    translations: {\n        description: {\n            en: 'Xerox Scanner',\n            de: 'Xerox Scanner',\n            fr: 'Xerox Scanner'\n        }\n    },\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, '')\n        };\n        return options;\n    },\n    data: function() {\n        return {\n            lastId: 1,\n            items: null\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            tree.items = this.loadAssets();\n        },\n        'load-more-items': function (items) {\n            this.loadAssets().forEach(function(item) {\n                    items.push(item);\n            });\n        }\n    },\n    methods: {\n        item: function(extension, thumbnail) {\n            return this.createItem({\n                id: '' + (this.lastId++),\n                type: extension ? 'file' : 'dir',\n                extension: extension,\n                name: 'Random ' + (extension || ' directory') + (thumbnail ? ' with thumb' : '') + ' ' + this.lastId,\n                thumbnail: thumbnail\n            });\n        },\n        loadAssets: function () {\n            var result = {page: 0, pages: 0, items: []};\n            this.http.get(\n                'mailbox/folder.php?name=' + this.config.directory\n            ).then((function(response) {\n                var data = JSON.parse(response.data);\n                response.data = data;\n                result.page = parseInt(response.data.page);\n                result.pages = parseInt(response.data.pages);\n                var downloadUrl = this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\";\n\t\tif (response.data && response.data.results) {\n                  response.data.results.forEach((function (asset) {\n                    var item = this.createItem({\n                      id: asset.id,\n                      type: asset.isfolder ? 'dir' : 'file',\n                      name: asset.name,\n                      extension: asset.extension,\n                      links: {\n                        download: downloadUrl + asset.id,\n                        open: downloadUrl + asset.id,\n                      },\n                      data: asset\n                    });\n                    result.items.push(item);\n                  }).bind(this));\n\t       }\n            }).bind(this));\n            return result.items;\n        }\n    }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerAdapterXerox_scanner = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n    translations: {\n        description: {\n            en: 'Xerox Scanner',\n            de: 'Xerox Scanner',\n            fr: 'Xerox Scanner'\n        }\n    },\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, '')\n        };\n        return options;\n    },\n    data: function() {\n        return {\n            lastId: 1,\n            items: null\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            tree.items = this.loadAssets();\n        },\n        'load-more-items': function (items) {\n            this.loadAssets().forEach(function(item) {\n                    items.push(item);\n            });\n        }\n    },\n    methods: {\n        item: function(extension, thumbnail) {\n            return this.createItem({\n                id: '' + (this.lastId++),\n                type: extension ? 'file' : 'dir',\n                extension: extension,\n                name: 'Random ' + (extension || ' directory') + (thumbnail ? ' with thumb' : '') + ' ' + this.lastId,\n                thumbnail: thumbnail\n            });\n        },\n        loadAssets: function () {\n            var result = {page: 0, pages: 0, items: []};\n            this.http.get(\n                'mailbox/folder.php?name=' + this.config.directory\n            ).then((function(response) {\n                var data = JSON.parse(response.data);\n                response.data = data;\n                result.page = parseInt(response.data.page);\n                result.pages = parseInt(response.data.pages);\n                var downloadUrl = this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\";\n\t\tif (response.data && response.data.results) {\n                  response.data.results.forEach((function (asset) {\n                    var item = this.createItem({\n                      id: asset.id,\n                      type: asset.isfolder ? 'dir' : 'file',\n                      name: asset.name,\n                      extension: asset.extension,\n                      links: {\n                        download: downloadUrl + asset.id,\n                        open: downloadUrl + asset.id,\n                      },\n                      data: asset\n                    });\n                    result.items.push(item);\n                  }).bind(this));\n\t       }\n            }).bind(this));\n            return result.items;\n        }\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n"]}