{"version":3,"sources":["adapter/node_modules/browser-pack/_prelude.js","adapter/src/js/adapter/xerox_scanner/index.js","adapter/xerox_scanner.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerAdapterXerox_scanner","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","translations","description","en","de","fr","http","options","base","config","url","replace","download","directory","validate","response","console","log","isValid","data","items","results","watch","appConfig.pick","handler","loadAssets","immediate","events","load-more-items","methods","result","page","pages","loading","query","get","then","parseInt","total","totalhits","downloadUrl","forEach","asset","item","createItem","id","type","isfolder","name","assettitle","primaryfile","title","extension","fileformat","created","parseDate","assetcreationdate","assetaddeddate","modified","assetmodificationdate","links","push","bind"],"mappings":"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","file":"../../adapter/xerox_scanner.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n    translations: {\n        description: {\n            en: 'Xerox Scanner',\n            de: 'Xerox Scanner',\n            fr: 'Xerox Scanner'\n        }\n    },\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, ''),\n            download: this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\",\n            validate: function (response) {\n                console.log(response);\n                response.isValid();\n                return;\n                response.data = response.json();\n                if (response.data.response.status !== 'ok') {\n                    this.login(function(username, password, callback) {\n                        this.http.post('authentication/login', {id: username, password: password}, {validate: function (response) {\n                            response.data = response.json();\n                            response.isValid(response.data.response.status === 'ok');\n                        }}).then(\n                            function (response) {\n                                callback(response.data.results.status !== 'invalidlogin');\n                            }\n                        );\n                    }).then(response.reload);\n                } else {\n                    response.isValid();\n                }\n            }\n        };\n        return options;\n    },\n    data: function() {\n        return {\n            items: null,\n            results: {}\n        }\n    },\n    watch: {\n        'appConfig.pick': {\n            handler: function (config) {\n                this.loadAssets({});\n            },\n            immediate: true\n        }\n    },\n    events: {\n        'load-more-items': function (results) {\n            this.loadAssets(results);\n        }\n    },\n    methods: {\n        loadAssets: function (items) {\n            var result = {page: 0, pages: 0, items: items || []};\n            this.results = result;\n\n            result.items.loading = true;\n            result.items.query = query;\n\n            return this.http.get(\n                'mailbox/folder.php?name=' + this.config.directory,\n                {\n\n                }\n            ).then((function(response) {\n                console.log(response);\n                if (result.items.query === query) {\n                    result.page = parseInt(response.data.response.page);\n                    result.pages = parseInt(response.data.response.pages);\n                    result.items.total = parseInt(response.data.response.totalhits);\n                    result.items.loading = false;\n                    var downloadUrl = this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\";\n                    response.data.results.forEach((function (asset) {\n                        var item = this.createItem({\n                            id: asset.id,\n                            query: query,\n                            type: asset.isfolder ? 'file' : 'dir',\n                            name: asset.assettitle || asset.name || asset.primaryfile,\n                            title: asset.assettitle,\n                            extension: asset.fileformat.id,\n                            created: this.parseDate(asset.assetcreationdate || asset.assetaddeddate),\n                            modified: this.parseDate(asset.assetmodificationdate),\n                            links: {\n                                download: downloadUrl + asset.id\n                            },\n                            data: asset\n                        });\n                        result.items.push(item);\n                    }).bind(this));\n                }\n                return result;\n            }).bind(this));\n        }\n    }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerAdapterXerox_scanner = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n    translations: {\n        description: {\n            en: 'Xerox Scanner',\n            de: 'Xerox Scanner',\n            fr: 'Xerox Scanner'\n        }\n    },\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, ''),\n            download: this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\",\n            validate: function (response) {\n                console.log(response);\n                response.isValid();\n                return;\n                response.data = response.json();\n                if (response.data.response.status !== 'ok') {\n                    this.login(function(username, password, callback) {\n                        this.http.post('authentication/login', {id: username, password: password}, {validate: function (response) {\n                            response.data = response.json();\n                            response.isValid(response.data.response.status === 'ok');\n                        }}).then(\n                            function (response) {\n                                callback(response.data.results.status !== 'invalidlogin');\n                            }\n                        );\n                    }).then(response.reload);\n                } else {\n                    response.isValid();\n                }\n            }\n        };\n        return options;\n    },\n    data: function() {\n        return {\n            items: null,\n            results: {}\n        }\n    },\n    watch: {\n        'appConfig.pick': {\n            handler: function (config) {\n                this.loadAssets({});\n            },\n            immediate: true\n        }\n    },\n    events: {\n        'load-more-items': function (results) {\n            this.loadAssets(results);\n        }\n    },\n    methods: {\n        loadAssets: function (items) {\n            var result = {page: 0, pages: 0, items: items || []};\n            this.results = result;\n\n            result.items.loading = true;\n            result.items.query = query;\n\n            return this.http.get(\n                'mailbox/folder.php?name=' + this.config.directory,\n                {\n\n                }\n            ).then((function(response) {\n                console.log(response);\n                if (result.items.query === query) {\n                    result.page = parseInt(response.data.response.page);\n                    result.pages = parseInt(response.data.response.pages);\n                    result.items.total = parseInt(response.data.response.totalhits);\n                    result.items.loading = false;\n                    var downloadUrl = this.config.url.replace(/\\/+$/, '') + '/mailbox/action.php?action=frc_dwnld&name=' + this.config.directory + \"&file=\";\n                    response.data.results.forEach((function (asset) {\n                        var item = this.createItem({\n                            id: asset.id,\n                            query: query,\n                            type: asset.isfolder ? 'file' : 'dir',\n                            name: asset.assettitle || asset.name || asset.primaryfile,\n                            title: asset.assettitle,\n                            extension: asset.fileformat.id,\n                            created: this.parseDate(asset.assetcreationdate || asset.assetaddeddate),\n                            modified: this.parseDate(asset.assetmodificationdate),\n                            links: {\n                                download: downloadUrl + asset.id\n                            },\n                            data: asset\n                        });\n                        result.items.push(item);\n                    }).bind(this));\n                }\n                return result;\n            }).bind(this));\n        }\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n"]}